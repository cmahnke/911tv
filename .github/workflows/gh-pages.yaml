name: Publish on GitHub pages

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
#  schedule:
#    - cron:  '0 7 * * 1'

permissions:
  packages: write
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y mediainfo icnsutils

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: '.nvmrc'

      - name: Install Node dependencies
        working-directory: ./site
        run: |
          npm i

      - name: Generate required dependencies
        run: |
          ./scripts/setup.sh

      - name: Compress JSON
        run: |
          node scripts/compress-json.mjs -i site/src/assets/json/urls.json -o site/src/assets/json/urls-jsoncrush-compressed.json -t jsoncrush
          node scripts/compress-json.mjs -i site/src/assets/json/urls.json -o site/src/assets/json/urls-lz-string-compressed.json -t lz-string

      - name: Provide url artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-json
          path: |
            site/src/assets/json/

      - name: Lint and Validate JSON
        working-directory: ./site
        run: |
          npx eslint

  dist:
    runs-on: ubuntu-latest
    needs: generate-json
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y mediainfo icnsutils

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      - name: Install dependencies
        run: |
          go install github.com/jackmordaunt/icns/cmd/icnsify@latest

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: '.nvmrc'

      - name: Install Node dependencies
        working-directory: ./site
        run: |
          npm i

      - name: Generate required images
        run: |
          ./scripts/image-assets.sh

      - uses: actions/download-artifact@v4
        with:
          name: generated-json
          path: site/src/assets/json/

      - name: Build apps
        working-directory: ./site
        run: |
          npm run app:all

  deploy:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y mediainfo icnsutils

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: '.nvmrc'

      - name: Install Node dependencies
        working-directory: ./site
        run: |
          npm i

      - name: Generate required dependencies
        run: |
          ./scripts/setup.sh

      - name: Compress JSON
        run: |
          node scripts/compress-json.mjs -i site/src/assets/json/urls.json -o site/src/assets/json/urls-jsoncrush-compressed.json -t jsoncrush
          node scripts/compress-json.mjs -i site/src/assets/json/urls.json -o site/src/assets/json/urls-lz-string-compressed.json -t lz-string

      - name: Provide url artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-json
          path: |
            site/src/assets/json/

      - name: Lint and Validate JSON
        working-directory: ./site
        run: |
          npx eslint

      - name: Build site
        working-directory: ./site
        run: |
          npx vite build

      - name: Copy generated files
        run: |
          cp ./site/src/assets/json/urls*.json ./site/dist
          cp ./site/src/assets/json/pages.json ./site/dist

      - name: Deploy site
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/dist
          force_orphan: true
