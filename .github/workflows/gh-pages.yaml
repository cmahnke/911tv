name: Publish on GitHub pages

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  release:
    types: [published]
#  schedule:
#    - cron:  '0 7 * * 1'

permissions:
  packages: write
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VERSION: 2024.10.5

jobs:
  generate-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get install -y mediainfo

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: '.nvmrc'

      - name: Install Node dependencies
        working-directory: ./site
        run: |
          npm i

      - name: Generate required dependencies
        run: |
          ./scripts/setup.sh

      - name: Compress JSON
        run: |
          node scripts/compress-json.mjs -i site/src/assets/json/urls.json -o site/src/assets/json/urls-lz-string-compressed.json -t lz-string
          node scripts/compress-json.mjs -i site/src/assets/json/pages.json -o site/src/assets/json/pages-lz-string-compressed.json -t lz-string

      - name: Provide url artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-json
          path: |
            site/src/assets/json/

      - name: Lint and Validate JSON
        working-directory: ./site
        run: |
          npx eslint

  dist:
    runs-on: ubuntu-24.04
    needs: generate-json
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        # See https://gitlab.winehq.org/wine/wine/-/wikis/Debian-Ubuntu
        run: |
          go install github.com/jackmordaunt/icns/cmd/icnsify@latest
          sudo apt-get install -y mediainfo libopenjp2-tools rpm libarchive-tools gcc-multilib g++-multilib dirmngr ca-certificates gnupg sudo wget imagemagick
          sudo mkdir -pm755 /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/noble/winehq-noble.sources
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt install -y --install-recommends wine-stable
          wine uninstaller --list

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: '.nvmrc'

      - name: Install Node dependencies
        working-directory: ./site
        run: |
          npm i

      - name: Generate required images
        run: |
          ./scripts/image-assets.sh

      - uses: actions/download-artifact@v4
        with:
          name: generated-json
          path: ./site/src/assets/json

      - name: Build apps
        working-directory: ./site
        run: |
          npm run app:linux
          npm run app:win

      - name: Package archives
        working-directory: ./site/dist
        run: |
          mv linux-arm64-unpacked 911tv
          tar czf 911tv-linux-arm64.tgz 911tv
          rm -r 911tv
          mv linux-unpacked 911tv
          tar czf 911tv-linux-amd64.tgz 911tv
          rm -r 911tv
          mv win-unpacked 911tv
          zip -r 911tv-win-x64 911tv
          rm -r 911tv
          mv win-arm64-unpacked 911tv
          zip -r 911tv-win-arm64 911tv
          rm -r 911tv
#          mv mac-arm64 911tv
#          zip -r 911tv-mac-arm64 911tv
#          rm 911tv
#          mv mac-universal 911tv
#          zip -r 911tv-mac-universal 911tv
#          rm 911tv

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          makeLatest: true
          token: ${{ github.token }}
          prerelease: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          tag: ${{ env.VERSION }}
          # ./site/dist/911tv-mac-universal.zip,./site/dist/911tv-mac-amd64.zip
          artifacts: "./site/dist/911tv-linux-arm64.tgz,./site/dist/911tv-linux-amd64.tgz,./site/dist/911tv-win-arm64.zip,./site/dist/911tv-win-x64.zip,,./site/dist/911tv-arm64-setup.exe,./site/dist/911tv-x64-setup.exe,./site/dist/911tv-arm64.AppImage,./site/dist/911tv-x86_64.AppImage"


  deploy:
    runs-on: ubuntu-latest
    needs: generate-json
    steps:

      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: '.nvmrc'

      - name: Install Node dependencies
        working-directory: ./site
        run: |
          npm i

      - name: Generate required images
        run: |
          ./scripts/image-assets.sh

      - uses: actions/download-artifact@v4
        with:
          name: generated-json
          path: ./site/src/assets/json

      - name: Lint and Validate JSON
        working-directory: ./site
        run: |
          npm run lint
          npm run tsc

      - name: Build site
        working-directory: ./site
        run: |
          npx vite build

      - name: Copy generated files
        run: |
          cp ./site/src/assets/json/*.json ./site/dist

      - name: Deploy site
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site/dist
          force_orphan: true
